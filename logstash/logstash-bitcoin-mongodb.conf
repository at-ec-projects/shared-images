#
# Obejtio: Ejecutar de CSV a mongodb (Transform)
# /usr/local/Cellar/logstash/6.1.1/bin/logstash 
#      -f /Users/pabloinchausti/Desktop/DevOps/code/github/PabloEzequiel/dockerImages/logstash/logstash-bitcoin-mongodb.conf
#
# TODO: DeberÃ­a instalar algo ... 
# 
input {
  file {
    path => "/Users/pabloinchausti/Desktop/DevOps/code/github/PabloEzequiel/dockerImages/logstash/files/BCHARTS-MTGOXUSD.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}
filter {
  csv {
      separator => ","
      #Date,Open,High,Low,Close,Volume (BTC),Volume (Currency),Weighted Price
      columns => ["Date","Open","High","Low","Close","Volume (BTC)", "Volume (Currency)" ,"Weighted Price"]
  }
}

# date {
#    match => ["Date","yyyy-MM-dd"]
# }

#mutate {
#  convert => ["Open","float"]
#  convert => ["High","float"]
#  convert => ["Low","float"]
#  convert => ["Close","float"]
#}

output {
  # file {
  #  path => "/Users/pabloinchausti/Desktop/DevOps/code/github/PabloEzequiel/dockerImages/logstash/files/BCHARTS-MTGOXUSD-output.csv"
  #  codec => line { format => "custom format: %{message}"}
  # }
  # csv {
  #   path => "/Users/pabloinchausti/Desktop/DevOps/code/github/PabloEzequiel/dockerImages/logstash/files/BCHARTS-MTGOXUSD-output2.csv"
  #   fields => ["Date","Open","High"]
  #    csv_options => {
  #     "col_sep" => "," 
  #   }
  # } 
  # stdout {}
  # stdout { codec => rubydebug }

  mongodb {
    id => "my_mongodb_plugin_id"
    collection => "bitcoin"
    database => "uela"
    #             mongodb://<dbuser>:<dbpassword>@ds163156.mlab.com:63156/uela
    uri => "mongodb://PabloEzequiel:PabloMongo321@ds163156.mlab.com:63156/uela"
    codec => "json"
  }
}

